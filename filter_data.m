function [X1, Y1_filtered, X2, Y2_filtered] = filter_data(file_name, data1_time, data1_values, data2_time, data2_values, data1_range, data2_range, fc1, fc2, fs, filter_order, do_plot)  %load the data from the file  data = dlmread(file_name);      %load the data from the first device  X1 = data(data1_range, data1_time);  Y1 = data(data1_range, data1_values);    %normalize the data:  m1 = mean(Y1);  Y1_zero = Y1 - m1;  Y1_square = Y1_zero .^ 2;    %divide by 3 times the standard deviation  s1 = std(Y1_square);  Y1_normalized = Y1_square / (3 * s1) ^ 2;    %apply filter for the given cut frequency  [b1, a1] = butter(5, 2 / fc1 / fs);  Y1_filtered = filter(b1, a1, Y1_normalized);      %load the data from the second device  X2 = data(data2_range, data2_time);  Y2 = data(data2_range, data2_values);    %normalize the data:  m2 = mean(Y2);  Y2_zero = Y2 - m2;  Y2_square = Y2_zero .^ 2;    %divide by 3 times the standard deviation  s2 = std(Y2_square);  Y2_normalized = Y2_square / (3 * s2) ^ 2;      %apply filter for the given cut frequency    [b2, a2] = butter(filter_order, 2 / fc2 / fs);  Y2_filtered = filter(b2, a2, Y2_normalized);     if do_plot    plot(X1, Y1_square, X1, Y1_filtered, X1, Y1_normalized, X2, Y2_square, X2, Y2_filtered, X2, Y2_normalized);    legend("Y1 square", "Y1 filtered", "Y1 normalized", "Y2 square", "Y2 filtered", "Y2 normalized");  endifend